// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using worknet_api.Data;

#nullable disable

namespace worknet_api.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20231227085022_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("worknet_api.Models.EmploymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmploymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Full-time"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Part-time"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Remote"
                        });
                });

            modelBuilder.Entity("worknet_api.Models.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Business"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Healthcare"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Hospitality"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Manufacturing"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Retail"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Transportation"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Construction"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Agriculture"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Media and Entertainment"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Energy"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Telecommunications"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Automotive"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Environmental"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Architecture"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Pharmaceuticals"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Nonprofit"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Research and Development"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Human Resources"
                        });
                });

            modelBuilder.Entity("worknet_api.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikLocationId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikLocationId");

                    b.ToTable("Korisnici");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Korisnik");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("worknet_api.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "",
                            Country = ""
                        },
                        new
                        {
                            Id = 2,
                            City = "Sarajevo",
                            Country = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = 3,
                            City = "Zagreb",
                            Country = "Croatia"
                        },
                        new
                        {
                            Id = 4,
                            City = "Pristina",
                            Country = "Kosovo"
                        },
                        new
                        {
                            Id = 5,
                            City = "Podgorica",
                            Country = "Montenegro"
                        },
                        new
                        {
                            Id = 6,
                            City = "Skopje",
                            Country = "North Macedonia"
                        },
                        new
                        {
                            Id = 7,
                            City = "Belgrade",
                            Country = "Serbia"
                        },
                        new
                        {
                            Id = 8,
                            City = "Ljubljana",
                            Country = "Slovenia"
                        });
                });

            modelBuilder.Entity("worknet_api.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostLocationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PostLocationId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("worknet_api.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("worknet_api.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("IndustryId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IndustryId = 1,
                            Name = "Business Strategy"
                        },
                        new
                        {
                            Id = 2,
                            IndustryId = 1,
                            Name = "Management"
                        },
                        new
                        {
                            Id = 3,
                            IndustryId = 1,
                            Name = "Entrepreneurship"
                        },
                        new
                        {
                            Id = 4,
                            IndustryId = 2,
                            Name = "Property Management"
                        },
                        new
                        {
                            Id = 5,
                            IndustryId = 2,
                            Name = "Real Estate Development"
                        },
                        new
                        {
                            Id = 6,
                            IndustryId = 2,
                            Name = "Commercial Real Estate"
                        },
                        new
                        {
                            Id = 7,
                            IndustryId = 3,
                            Name = "Programming"
                        },
                        new
                        {
                            Id = 8,
                            IndustryId = 3,
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = 9,
                            IndustryId = 3,
                            Name = "Data Science"
                        },
                        new
                        {
                            Id = 10,
                            IndustryId = 4,
                            Name = "Medical Coding"
                        },
                        new
                        {
                            Id = 11,
                            IndustryId = 4,
                            Name = "Nursing"
                        },
                        new
                        {
                            Id = 12,
                            IndustryId = 4,
                            Name = "Health Informatics"
                        },
                        new
                        {
                            Id = 13,
                            IndustryId = 5,
                            Name = "Financial Analysis"
                        },
                        new
                        {
                            Id = 14,
                            IndustryId = 5,
                            Name = "Investment Banking"
                        },
                        new
                        {
                            Id = 15,
                            IndustryId = 5,
                            Name = "Accounting"
                        },
                        new
                        {
                            Id = 16,
                            IndustryId = 6,
                            Name = "Teaching"
                        },
                        new
                        {
                            Id = 17,
                            IndustryId = 6,
                            Name = "Educational Technology"
                        },
                        new
                        {
                            Id = 18,
                            IndustryId = 6,
                            Name = "Curriculum Design"
                        },
                        new
                        {
                            Id = 19,
                            IndustryId = 7,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = 20,
                            IndustryId = 7,
                            Name = "Hotel Management"
                        },
                        new
                        {
                            Id = 21,
                            IndustryId = 7,
                            Name = "Event Planning"
                        },
                        new
                        {
                            Id = 22,
                            IndustryId = 8,
                            Name = "Quality Control"
                        },
                        new
                        {
                            Id = 23,
                            IndustryId = 8,
                            Name = "Supply Chain Management"
                        },
                        new
                        {
                            Id = 24,
                            IndustryId = 8,
                            Name = "Lean Manufacturing"
                        },
                        new
                        {
                            Id = 25,
                            IndustryId = 9,
                            Name = "Visual Merchandising"
                        },
                        new
                        {
                            Id = 26,
                            IndustryId = 9,
                            Name = "Retail Sales"
                        },
                        new
                        {
                            Id = 27,
                            IndustryId = 9,
                            Name = "Inventory Management"
                        },
                        new
                        {
                            Id = 28,
                            IndustryId = 10,
                            Name = "Logistics"
                        },
                        new
                        {
                            Id = 29,
                            IndustryId = 10,
                            Name = "Fleet Management"
                        },
                        new
                        {
                            Id = 30,
                            IndustryId = 10,
                            Name = "Aviation"
                        });
                });

            modelBuilder.Entity("worknet_api.Models.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("worknet_api.Models.Company", b =>
                {
                    b.HasBaseType("worknet_api.Models.Korisnik");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyOwner")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Company");
                });

            modelBuilder.Entity("worknet_api.Models.Employee", b =>
                {
                    b.HasBaseType("worknet_api.Models.Korisnik");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Universty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkedAt")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("worknet_api.Models.Korisnik", b =>
                {
                    b.HasOne("worknet_api.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("KorisnikLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("worknet_api.Models.Post", b =>
                {
                    b.HasOne("worknet_api.Models.Company", "Company")
                        .WithMany("Posts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("worknet_api.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("PostLocationId");

                    b.Navigation("Company");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("worknet_api.Models.Review", b =>
                {
                    b.HasOne("worknet_api.Models.Employee", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("worknet_api.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("worknet_api.Models.Skill", b =>
                {
                    b.HasOne("worknet_api.Models.Employee", null)
                        .WithMany("Skills")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("worknet_api.Models.Industry", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("worknet_api.Models.Token", b =>
                {
                    b.HasOne("worknet_api.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("worknet_api.Models.Company", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("worknet_api.Models.Employee", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
